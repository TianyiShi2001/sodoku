type SodokuMatrix = [[u8; 9]; 9];
const SODOKU: [SodokuMatrix; 50] = [
    [
        [0, 0, 3, 0, 2, 0, 6, 0, 0],
        [9, 0, 0, 3, 0, 5, 0, 0, 1],
        [0, 0, 1, 8, 0, 6, 4, 0, 0],
        [0, 0, 8, 1, 0, 2, 9, 0, 0],
        [7, 0, 0, 0, 0, 0, 0, 0, 8],
        [0, 0, 6, 7, 0, 8, 2, 0, 0],
        [0, 0, 2, 6, 0, 9, 5, 0, 0],
        [8, 0, 0, 2, 0, 3, 0, 0, 9],
        [0, 0, 5, 0, 1, 0, 3, 0, 0],
    ],
    [
        [2, 0, 0, 0, 8, 0, 3, 0, 0],
        [0, 6, 0, 0, 7, 0, 0, 8, 4],
        [0, 3, 0, 5, 0, 0, 2, 0, 9],
        [0, 0, 0, 1, 0, 5, 4, 0, 8],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [4, 0, 2, 7, 0, 6, 0, 0, 0],
        [3, 0, 1, 0, 0, 7, 0, 4, 0],
        [7, 2, 0, 0, 4, 0, 0, 6, 0],
        [0, 0, 4, 0, 1, 0, 0, 0, 3],
    ],
    [
        [0, 0, 0, 0, 0, 0, 9, 0, 7],
        [0, 0, 0, 4, 2, 0, 1, 8, 0],
        [0, 0, 0, 7, 0, 5, 0, 2, 6],
        [1, 0, 0, 9, 0, 4, 0, 0, 0],
        [0, 5, 0, 0, 0, 0, 0, 4, 0],
        [0, 0, 0, 5, 0, 7, 0, 0, 9],
        [9, 2, 0, 1, 0, 8, 0, 0, 0],
        [0, 3, 4, 0, 5, 9, 0, 0, 0],
        [5, 0, 7, 0, 0, 0, 0, 0, 0],
    ],
    [
        [0, 3, 0, 0, 5, 0, 0, 4, 0],
        [0, 0, 8, 0, 1, 0, 5, 0, 0],
        [4, 6, 0, 0, 0, 0, 0, 1, 2],
        [0, 7, 0, 5, 0, 2, 0, 8, 0],
        [0, 0, 0, 6, 0, 3, 0, 0, 0],
        [0, 4, 0, 1, 0, 9, 0, 3, 0],
        [2, 5, 0, 0, 0, 0, 0, 9, 8],
        [0, 0, 1, 0, 2, 0, 6, 0, 0],
        [0, 8, 0, 0, 6, 0, 0, 2, 0],
    ],
    [
        [0, 2, 0, 8, 1, 0, 7, 4, 0],
        [7, 0, 0, 0, 0, 3, 1, 0, 0],
        [0, 9, 0, 0, 0, 2, 8, 0, 5],
        [0, 0, 9, 0, 4, 0, 0, 8, 7],
        [4, 0, 0, 2, 0, 8, 0, 0, 3],
        [1, 6, 0, 0, 3, 0, 2, 0, 0],
        [3, 0, 2, 7, 0, 0, 0, 6, 0],
        [0, 0, 5, 6, 0, 0, 0, 0, 8],
        [0, 7, 6, 0, 5, 1, 0, 9, 0],
    ],
    [
        [1, 0, 0, 9, 2, 0, 0, 0, 0],
        [5, 2, 4, 0, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 7, 0],
        [0, 5, 0, 0, 0, 8, 1, 0, 2],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [4, 0, 2, 7, 0, 0, 0, 9, 0],
        [0, 6, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 9, 4, 5],
        [0, 0, 0, 0, 7, 1, 0, 0, 6],
    ],
    [
        [0, 4, 3, 0, 8, 0, 2, 5, 0],
        [6, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 9, 4],
        [9, 0, 0, 0, 0, 4, 0, 7, 0],
        [0, 0, 0, 6, 0, 8, 0, 0, 0],
        [0, 1, 0, 2, 0, 0, 0, 0, 3],
        [8, 2, 0, 5, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 5],
        [0, 3, 4, 0, 9, 0, 7, 1, 0],
    ],
    [
        [4, 8, 0, 0, 0, 6, 9, 0, 2],
        [0, 0, 2, 0, 0, 8, 0, 0, 1],
        [9, 0, 0, 3, 7, 0, 0, 6, 0],
        [8, 4, 0, 0, 1, 0, 2, 0, 0],
        [0, 0, 3, 7, 0, 4, 1, 0, 0],
        [0, 0, 1, 0, 6, 0, 0, 4, 9],
        [0, 2, 0, 0, 8, 5, 0, 0, 7],
        [7, 0, 0, 9, 0, 0, 6, 0, 0],
        [6, 0, 9, 2, 0, 0, 0, 1, 8],
    ],
    [
        [0, 0, 0, 9, 0, 0, 0, 0, 2],
        [0, 5, 0, 1, 2, 3, 4, 0, 0],
        [0, 3, 0, 0, 0, 0, 1, 6, 0],
        [9, 0, 8, 0, 0, 0, 0, 0, 0],
        [0, 7, 0, 0, 0, 0, 0, 9, 0],
        [0, 0, 0, 0, 0, 0, 2, 0, 5],
        [0, 9, 1, 0, 0, 0, 0, 5, 0],
        [0, 0, 7, 4, 3, 9, 0, 2, 0],
        [4, 0, 0, 0, 0, 7, 0, 0, 0],
    ],
    [
        [0, 0, 1, 9, 0, 0, 0, 0, 3],
        [9, 0, 0, 7, 0, 0, 1, 6, 0],
        [0, 3, 0, 0, 0, 5, 0, 0, 7],
        [0, 5, 0, 0, 0, 0, 0, 0, 9],
        [0, 0, 4, 3, 0, 2, 6, 0, 0],
        [2, 0, 0, 0, 0, 0, 0, 7, 0],
        [6, 0, 0, 1, 0, 0, 0, 3, 0],
        [0, 4, 2, 0, 0, 7, 0, 0, 6],
        [5, 0, 0, 0, 0, 6, 8, 0, 0],
    ],
    [
        [0, 0, 0, 1, 2, 5, 4, 0, 0],
        [0, 0, 8, 4, 0, 0, 0, 0, 0],
        [4, 2, 0, 8, 0, 0, 0, 0, 0],
        [0, 3, 0, 0, 0, 0, 0, 9, 5],
        [0, 6, 0, 9, 0, 2, 0, 1, 0],
        [5, 1, 0, 0, 0, 0, 0, 6, 0],
        [0, 0, 0, 0, 0, 3, 0, 4, 9],
        [0, 0, 0, 0, 0, 7, 2, 0, 0],
        [0, 0, 1, 2, 9, 8, 0, 0, 0],
    ],
    [
        [0, 6, 2, 3, 4, 0, 7, 5, 0],
        [1, 0, 0, 0, 0, 5, 6, 0, 0],
        [5, 7, 0, 0, 0, 0, 0, 4, 0],
        [0, 0, 0, 0, 9, 4, 8, 0, 0],
        [4, 0, 0, 0, 0, 0, 0, 0, 6],
        [0, 0, 5, 8, 3, 0, 0, 0, 0],
        [0, 3, 0, 0, 0, 0, 0, 9, 1],
        [0, 0, 6, 4, 0, 0, 0, 0, 7],
        [0, 5, 9, 0, 8, 3, 2, 6, 0],
    ],
    [
        [3, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 5, 0, 0, 9, 0, 0, 0],
        [2, 0, 0, 5, 0, 4, 0, 0, 0],
        [0, 2, 0, 0, 0, 0, 7, 0, 0],
        [1, 6, 0, 0, 0, 0, 0, 5, 8],
        [7, 0, 4, 3, 1, 0, 6, 0, 0],
        [0, 0, 0, 8, 9, 0, 1, 0, 0],
        [0, 0, 0, 0, 6, 7, 0, 8, 0],
        [0, 0, 0, 0, 0, 5, 4, 3, 7],
    ],
    [
        [6, 3, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 5, 0, 0, 0, 0, 8],
        [0, 0, 5, 6, 7, 4, 0, 0, 0],
        [0, 0, 0, 0, 2, 0, 0, 0, 0],
        [0, 0, 3, 4, 0, 1, 0, 2, 0],
        [0, 0, 0, 0, 0, 0, 3, 4, 5],
        [0, 0, 0, 0, 0, 7, 0, 0, 4],
        [0, 8, 0, 3, 0, 0, 9, 0, 2],
        [9, 4, 7, 1, 0, 0, 0, 8, 0],
    ],
    [
        [0, 0, 0, 0, 2, 0, 0, 4, 0],
        [0, 0, 8, 0, 3, 5, 0, 0, 0],
        [0, 0, 0, 0, 7, 0, 6, 0, 2],
        [0, 3, 1, 0, 4, 6, 9, 7, 0],
        [2, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 5, 0, 1, 2, 0, 3],
        [0, 4, 9, 0, 0, 0, 7, 3, 0],
        [0, 0, 0, 0, 0, 0, 0, 1, 0],
        [8, 0, 0, 0, 0, 4, 0, 0, 0],
    ],
    [
        [3, 6, 1, 0, 2, 5, 9, 0, 0],
        [0, 8, 0, 9, 6, 0, 0, 1, 0],
        [4, 0, 0, 0, 0, 0, 0, 5, 7],
        [0, 0, 8, 0, 0, 0, 4, 7, 1],
        [0, 0, 0, 6, 0, 3, 0, 0, 0],
        [2, 5, 9, 0, 0, 0, 8, 0, 0],
        [7, 4, 0, 0, 0, 0, 0, 0, 5],
        [0, 2, 0, 0, 1, 8, 0, 6, 0],
        [0, 0, 5, 4, 7, 0, 3, 2, 9],
    ],
    [
        [0, 5, 0, 8, 0, 7, 0, 2, 0],
        [6, 0, 0, 0, 1, 0, 0, 9, 0],
        [7, 0, 2, 5, 4, 0, 0, 0, 6],
        [0, 7, 0, 0, 2, 0, 3, 0, 1],
        [5, 0, 4, 0, 0, 0, 9, 0, 8],
        [1, 0, 3, 0, 8, 0, 0, 7, 0],
        [9, 0, 0, 0, 7, 6, 2, 0, 5],
        [0, 6, 0, 0, 9, 0, 0, 0, 3],
        [0, 8, 0, 1, 0, 3, 0, 4, 0],
    ],
    [
        [0, 8, 0, 0, 0, 5, 0, 0, 0],
        [0, 0, 0, 0, 0, 3, 4, 5, 7],
        [0, 0, 0, 0, 7, 0, 8, 0, 9],
        [0, 6, 0, 4, 0, 0, 9, 0, 3],
        [0, 0, 7, 0, 1, 0, 5, 0, 0],
        [4, 0, 8, 0, 0, 7, 0, 2, 0],
        [9, 0, 1, 0, 2, 0, 0, 0, 0],
        [8, 4, 2, 3, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 8, 0],
    ],
    [
        [0, 0, 3, 5, 0, 2, 9, 0, 0],
        [0, 0, 0, 0, 4, 0, 0, 0, 0],
        [1, 0, 6, 0, 0, 0, 3, 0, 5],
        [9, 0, 0, 2, 5, 1, 0, 0, 8],
        [0, 7, 0, 4, 0, 8, 0, 3, 0],
        [8, 0, 0, 7, 6, 3, 0, 0, 1],
        [3, 0, 8, 0, 0, 0, 1, 0, 4],
        [0, 0, 0, 0, 2, 0, 0, 0, 0],
        [0, 0, 5, 1, 0, 4, 8, 0, 0],
    ],
    [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 9, 8, 0, 5, 1, 0, 0],
        [0, 5, 1, 9, 0, 7, 4, 2, 0],
        [2, 9, 0, 4, 0, 1, 0, 6, 5],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 4, 0, 5, 0, 8, 0, 9, 3],
        [0, 2, 6, 7, 0, 9, 5, 8, 0],
        [0, 0, 5, 1, 0, 3, 6, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
    ],
    [
        [0, 2, 0, 0, 3, 0, 0, 9, 0],
        [0, 0, 0, 9, 0, 7, 0, 0, 0],
        [9, 0, 0, 2, 0, 8, 0, 0, 5],
        [0, 0, 4, 8, 0, 6, 5, 0, 0],
        [6, 0, 7, 0, 0, 0, 2, 0, 8],
        [0, 0, 3, 1, 0, 2, 9, 0, 0],
        [8, 0, 0, 6, 0, 5, 0, 0, 7],
        [0, 0, 0, 3, 0, 9, 0, 0, 0],
        [0, 3, 0, 0, 2, 0, 0, 5, 0],
    ],
    [
        [0, 0, 5, 0, 0, 0, 0, 0, 6],
        [0, 7, 0, 0, 0, 9, 0, 2, 0],
        [0, 0, 0, 5, 0, 0, 1, 0, 7],
        [8, 0, 4, 1, 5, 0, 0, 0, 0],
        [0, 0, 0, 8, 0, 3, 0, 0, 0],
        [0, 0, 0, 0, 9, 2, 8, 0, 5],
        [9, 0, 7, 0, 0, 6, 0, 0, 0],
        [0, 3, 0, 4, 0, 0, 0, 1, 0],
        [2, 0, 0, 0, 0, 0, 6, 0, 0],
    ],
    [
        [0, 4, 0, 0, 0, 0, 0, 5, 0],
        [0, 0, 1, 9, 4, 3, 6, 0, 0],
        [0, 0, 9, 0, 0, 0, 3, 0, 0],
        [6, 0, 0, 0, 5, 0, 0, 0, 2],
        [1, 0, 3, 0, 0, 0, 5, 0, 6],
        [8, 0, 0, 0, 2, 0, 0, 0, 7],
        [0, 0, 5, 0, 0, 0, 2, 0, 0],
        [0, 0, 2, 4, 3, 6, 7, 0, 0],
        [0, 3, 0, 0, 0, 0, 0, 4, 0],
    ],
    [
        [0, 0, 4, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 0, 0, 2],
        [3, 9, 0, 7, 0, 0, 0, 8, 0],
        [4, 0, 0, 0, 0, 9, 0, 0, 1],
        [2, 0, 9, 8, 0, 1, 3, 0, 7],
        [6, 0, 0, 2, 0, 0, 0, 0, 8],
        [0, 1, 0, 0, 0, 8, 0, 5, 3],
        [9, 0, 0, 0, 4, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 8, 0, 0],
    ],
    [
        [3, 6, 0, 0, 2, 0, 0, 8, 9],
        [0, 0, 0, 3, 6, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 3, 0, 0, 0, 6, 0, 2],
        [4, 0, 0, 6, 0, 3, 0, 0, 7],
        [6, 0, 7, 0, 0, 0, 1, 0, 8],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 1, 8, 0, 0, 0],
        [9, 7, 0, 0, 3, 0, 0, 1, 4],
    ],
    [
        [5, 0, 0, 4, 0, 0, 0, 6, 0],
        [0, 0, 9, 0, 0, 0, 8, 0, 0],
        [6, 4, 0, 0, 2, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 0, 8],
        [2, 0, 8, 0, 0, 0, 5, 0, 1],
        [7, 0, 0, 5, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 9, 0, 0, 8, 4],
        [0, 0, 3, 0, 0, 0, 6, 0, 0],
        [0, 6, 0, 0, 0, 3, 0, 0, 2],
    ],
    [
        [0, 0, 7, 2, 5, 6, 4, 0, 0],
        [4, 0, 0, 0, 0, 0, 0, 0, 5],
        [0, 1, 0, 0, 3, 0, 0, 6, 0],
        [0, 0, 0, 5, 0, 8, 0, 0, 0],
        [0, 0, 8, 0, 6, 0, 2, 0, 0],
        [0, 0, 0, 1, 0, 7, 0, 0, 0],
        [0, 3, 0, 0, 7, 0, 0, 9, 0],
        [2, 0, 0, 0, 0, 0, 0, 0, 4],
        [0, 0, 6, 3, 1, 2, 7, 0, 0],
    ],
    [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 7, 9, 0, 5, 0, 1, 8, 0],
        [8, 0, 0, 0, 0, 0, 0, 0, 7],
        [0, 0, 7, 3, 0, 6, 8, 0, 0],
        [4, 5, 0, 7, 0, 8, 0, 9, 6],
        [0, 0, 3, 5, 0, 2, 7, 0, 0],
        [7, 0, 0, 0, 0, 0, 0, 0, 5],
        [0, 1, 6, 0, 3, 0, 4, 2, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
    ],
    [
        [0, 3, 0, 0, 0, 0, 0, 8, 0],
        [0, 0, 9, 0, 0, 0, 5, 0, 0],
        [0, 0, 7, 5, 0, 9, 2, 0, 0],
        [7, 0, 0, 1, 0, 5, 0, 0, 8],
        [0, 2, 0, 0, 9, 0, 0, 3, 0],
        [9, 0, 0, 4, 0, 2, 0, 0, 1],
        [0, 0, 4, 2, 0, 7, 1, 0, 0],
        [0, 0, 2, 0, 0, 0, 8, 0, 0],
        [0, 7, 0, 0, 0, 0, 0, 9, 0],
    ],
    [
        [2, 0, 0, 1, 7, 0, 6, 0, 3],
        [0, 5, 0, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0, 6, 0, 7, 9],
        [0, 0, 0, 0, 4, 0, 7, 0, 0],
        [0, 0, 0, 8, 0, 1, 0, 0, 0],
        [0, 0, 9, 0, 5, 0, 0, 0, 0],
        [3, 1, 0, 4, 0, 0, 0, 0, 0],
        [0, 0, 5, 0, 0, 0, 0, 6, 0],
        [9, 0, 6, 0, 3, 7, 0, 0, 2],
    ],
    [
        [0, 0, 0, 0, 0, 0, 0, 8, 0],
        [8, 0, 0, 7, 0, 1, 0, 4, 0],
        [0, 4, 0, 0, 2, 0, 0, 3, 0],
        [3, 7, 4, 0, 0, 0, 9, 0, 0],
        [0, 0, 0, 0, 3, 0, 0, 0, 0],
        [0, 0, 5, 0, 0, 0, 3, 2, 1],
        [0, 1, 0, 0, 6, 0, 0, 5, 0],
        [0, 5, 0, 8, 0, 2, 0, 0, 6],
        [0, 8, 0, 0, 0, 0, 0, 0, 0],
    ],
    [
        [0, 0, 0, 0, 0, 0, 0, 8, 5],
        [0, 0, 0, 2, 1, 0, 0, 0, 9],
        [9, 6, 0, 0, 8, 0, 1, 0, 0],
        [5, 0, 0, 8, 0, 0, 0, 1, 6],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [8, 9, 0, 0, 0, 6, 0, 0, 7],
        [0, 0, 9, 0, 7, 0, 0, 5, 2],
        [3, 0, 0, 0, 5, 4, 0, 0, 0],
        [4, 8, 0, 0, 0, 0, 0, 0, 0],
    ],
    [
        [6, 0, 8, 0, 7, 0, 5, 0, 2],
        [0, 5, 0, 6, 0, 8, 0, 7, 0],
        [0, 0, 2, 0, 0, 0, 3, 0, 0],
        [5, 0, 0, 0, 9, 0, 0, 0, 6],
        [0, 4, 0, 3, 0, 2, 0, 5, 0],
        [8, 0, 0, 0, 5, 0, 0, 0, 3],
        [0, 0, 5, 0, 0, 0, 2, 0, 0],
        [0, 1, 0, 7, 0, 4, 0, 9, 0],
        [4, 0, 9, 0, 6, 0, 7, 0, 1],
    ],
    [
        [0, 5, 0, 0, 1, 0, 0, 4, 0],
        [1, 0, 7, 0, 0, 0, 6, 0, 2],
        [0, 0, 0, 9, 0, 5, 0, 0, 0],
        [2, 0, 8, 0, 3, 0, 5, 0, 1],
        [0, 4, 0, 0, 7, 0, 0, 2, 0],
        [9, 0, 1, 0, 8, 0, 4, 0, 6],
        [0, 0, 0, 4, 0, 1, 0, 0, 0],
        [3, 0, 4, 0, 0, 0, 7, 0, 9],
        [0, 2, 0, 0, 6, 0, 0, 1, 0],
    ],
    [
        [0, 5, 3, 0, 0, 0, 7, 9, 0],
        [0, 0, 9, 7, 5, 3, 4, 0, 0],
        [1, 0, 0, 0, 0, 0, 0, 0, 2],
        [0, 9, 0, 0, 8, 0, 0, 1, 0],
        [0, 0, 0, 9, 0, 7, 0, 0, 0],
        [0, 8, 0, 0, 3, 0, 0, 7, 0],
        [5, 0, 0, 0, 0, 0, 0, 0, 3],
        [0, 0, 7, 6, 4, 1, 2, 0, 0],
        [0, 6, 1, 0, 0, 0, 9, 4, 0],
    ],
    [
        [0, 0, 6, 0, 8, 0, 3, 0, 0],
        [0, 4, 9, 0, 7, 0, 2, 5, 0],
        [0, 0, 0, 4, 0, 5, 0, 0, 0],
        [6, 0, 0, 3, 1, 7, 0, 0, 4],
        [0, 0, 7, 0, 0, 0, 8, 0, 0],
        [1, 0, 0, 8, 2, 6, 0, 0, 9],
        [0, 0, 0, 7, 0, 2, 0, 0, 0],
        [0, 7, 5, 0, 4, 0, 1, 9, 0],
        [0, 0, 3, 0, 9, 0, 6, 0, 0],
    ],
    [
        [0, 0, 5, 0, 8, 0, 7, 0, 0],
        [7, 0, 0, 2, 0, 4, 0, 0, 5],
        [3, 2, 0, 0, 0, 0, 0, 8, 4],
        [0, 6, 0, 1, 0, 5, 0, 4, 0],
        [0, 0, 8, 0, 0, 0, 5, 0, 0],
        [0, 7, 0, 8, 0, 3, 0, 1, 0],
        [4, 5, 0, 0, 0, 0, 0, 9, 1],
        [6, 0, 0, 5, 0, 8, 0, 0, 7],
        [0, 0, 3, 0, 1, 0, 6, 0, 0],
    ],
    [
        [0, 0, 0, 9, 0, 0, 8, 0, 0],
        [1, 2, 8, 0, 0, 6, 4, 0, 0],
        [0, 7, 0, 8, 0, 0, 0, 6, 0],
        [8, 0, 0, 4, 3, 0, 0, 0, 7],
        [5, 0, 0, 0, 0, 0, 0, 0, 9],
        [6, 0, 0, 0, 7, 9, 0, 0, 8],
        [0, 9, 0, 0, 0, 4, 0, 1, 0],
        [0, 0, 3, 6, 0, 0, 2, 8, 4],
        [0, 0, 1, 0, 0, 7, 0, 0, 0],
    ],
    [
        [0, 0, 0, 0, 8, 0, 0, 0, 0],
        [2, 7, 0, 0, 0, 0, 0, 5, 4],
        [0, 9, 5, 0, 0, 0, 8, 1, 0],
        [0, 0, 9, 8, 0, 6, 4, 0, 0],
        [0, 2, 0, 4, 0, 3, 0, 6, 0],
        [0, 0, 6, 9, 0, 5, 1, 0, 0],
        [0, 1, 7, 0, 0, 0, 6, 2, 0],
        [4, 6, 0, 0, 0, 0, 0, 3, 8],
        [0, 0, 0, 0, 9, 0, 0, 0, 0],
    ],
    [
        [0, 0, 0, 6, 0, 2, 0, 0, 0],
        [4, 0, 0, 0, 5, 0, 0, 0, 1],
        [0, 8, 5, 0, 1, 0, 6, 2, 0],
        [0, 3, 8, 2, 0, 6, 7, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 9, 4, 0, 7, 3, 5, 0],
        [0, 2, 6, 0, 4, 0, 5, 3, 0],
        [9, 0, 0, 0, 2, 0, 0, 0, 7],
        [0, 0, 0, 8, 0, 9, 0, 0, 0],
    ],
    [
        [0, 0, 0, 9, 0, 0, 0, 0, 2],
        [0, 5, 0, 1, 2, 3, 4, 0, 0],
        [0, 3, 0, 0, 0, 0, 1, 6, 0],
        [9, 0, 8, 0, 0, 0, 0, 0, 0],
        [0, 7, 0, 0, 0, 0, 0, 9, 0],
        [0, 0, 0, 0, 0, 0, 2, 0, 5],
        [0, 9, 1, 0, 0, 0, 0, 5, 0],
        [0, 0, 7, 4, 3, 9, 0, 2, 0],
        [4, 0, 0, 0, 0, 7, 0, 0, 0],
    ],
    [
        [3, 8, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 0, 0, 7, 8, 5],
        [0, 0, 9, 0, 2, 0, 3, 0, 0],
        [0, 6, 0, 0, 9, 0, 0, 0, 0],
        [8, 0, 0, 3, 0, 2, 0, 0, 9],
        [0, 0, 0, 0, 4, 0, 0, 7, 0],
        [0, 0, 1, 0, 7, 0, 5, 0, 0],
        [4, 9, 5, 0, 0, 6, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 9, 2],
    ],
    [
        [0, 0, 0, 1, 5, 8, 0, 0, 0],
        [0, 0, 2, 0, 6, 0, 8, 0, 0],
        [0, 3, 0, 0, 0, 0, 0, 4, 0],
        [0, 2, 7, 0, 3, 0, 5, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 4, 6, 0, 8, 0, 7, 9, 0],
        [0, 5, 0, 0, 0, 0, 0, 8, 0],
        [0, 0, 4, 0, 7, 0, 1, 0, 0],
        [0, 0, 0, 3, 2, 5, 0, 0, 0],
    ],
    [
        [0, 1, 0, 5, 0, 0, 2, 0, 0],
        [9, 0, 0, 0, 0, 1, 0, 0, 0],
        [0, 0, 2, 0, 0, 8, 0, 3, 0],
        [5, 0, 0, 0, 3, 0, 0, 0, 7],
        [0, 0, 8, 0, 0, 0, 5, 0, 0],
        [6, 0, 0, 0, 8, 0, 0, 0, 4],
        [0, 4, 0, 1, 0, 0, 7, 0, 0],
        [0, 0, 0, 7, 0, 0, 0, 0, 6],
        [0, 0, 3, 0, 0, 4, 0, 5, 0],
    ],
    [
        [0, 8, 0, 0, 0, 0, 0, 4, 0],
        [0, 0, 0, 4, 6, 9, 0, 0, 0],
        [4, 0, 0, 0, 0, 0, 0, 0, 7],
        [0, 0, 5, 9, 0, 4, 6, 0, 0],
        [0, 7, 0, 6, 0, 8, 0, 3, 0],
        [0, 0, 8, 5, 0, 2, 1, 0, 0],
        [9, 0, 0, 0, 0, 0, 0, 0, 5],
        [0, 0, 0, 7, 8, 1, 0, 0, 0],
        [0, 6, 0, 0, 0, 0, 0, 1, 0],
    ],
    [
        [9, 0, 4, 2, 0, 0, 0, 0, 7],
        [0, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 7, 0, 6, 5, 0, 0],
        [0, 0, 0, 8, 0, 0, 0, 9, 0],
        [0, 2, 0, 9, 0, 4, 0, 6, 0],
        [0, 4, 0, 0, 0, 2, 0, 0, 0],
        [0, 0, 1, 6, 0, 7, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 3, 0],
        [3, 0, 0, 0, 0, 5, 7, 0, 2],
    ],
    [
        [0, 0, 0, 7, 0, 0, 8, 0, 0],
        [0, 0, 6, 0, 0, 0, 0, 3, 1],
        [0, 4, 0, 0, 0, 2, 0, 0, 0],
        [0, 2, 4, 0, 7, 0, 0, 0, 0],
        [0, 1, 0, 0, 3, 0, 0, 8, 0],
        [0, 0, 0, 0, 6, 0, 2, 9, 0],
        [0, 0, 0, 8, 0, 0, 0, 7, 0],
        [8, 6, 0, 0, 0, 0, 5, 0, 0],
        [0, 0, 2, 0, 0, 6, 0, 0, 0],
    ],
    [
        [0, 0, 1, 0, 0, 7, 0, 9, 0],
        [5, 9, 0, 0, 8, 0, 0, 0, 1],
        [0, 3, 0, 0, 0, 0, 0, 8, 0],
        [0, 0, 0, 0, 0, 5, 8, 0, 0],
        [0, 5, 0, 0, 6, 0, 0, 2, 0],
        [0, 0, 4, 1, 0, 0, 0, 0, 0],
        [0, 8, 0, 0, 0, 0, 0, 3, 0],
        [1, 0, 0, 0, 2, 0, 0, 7, 9],
        [0, 2, 0, 7, 0, 0, 4, 0, 0],
    ],
    [
        [0, 0, 0, 0, 0, 3, 0, 1, 7],
        [0, 1, 5, 0, 0, 9, 0, 0, 8],
        [0, 6, 0, 0, 0, 0, 0, 0, 0],
        [1, 0, 0, 0, 0, 7, 0, 0, 0],
        [0, 0, 9, 0, 0, 0, 2, 0, 0],
        [0, 0, 0, 5, 0, 0, 0, 0, 4],
        [0, 0, 0, 0, 0, 0, 0, 2, 0],
        [5, 0, 0, 6, 0, 0, 3, 4, 0],
        [3, 4, 0, 2, 0, 0, 0, 0, 0],
    ],
    [
        [3, 0, 0, 2, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 0, 7, 0, 0, 0],
        [7, 0, 6, 0, 3, 0, 5, 0, 0],
        [0, 7, 0, 0, 0, 9, 0, 8, 0],
        [9, 0, 0, 0, 2, 0, 0, 0, 4],
        [0, 1, 0, 8, 0, 0, 0, 5, 0],
        [0, 0, 9, 0, 4, 0, 3, 0, 1],
        [0, 0, 0, 7, 0, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 8, 0, 0, 6],
    ],
];

type Coord = [usize; 2];

struct Sodoku {
    matrix: SodokuMatrix,
    coords: Vec<Coord>,
}

impl Sodoku {
    fn new(matrix: SodokuMatrix) -> Self {
        Self {
            matrix,
            coords: Self::find_empty_coords(&matrix),
        }
    }

    fn find_empty_coords(sodoku: &SodokuMatrix) -> Vec<Coord> {
        let mut coords: Vec<Coord> = Vec::new();
        for i in 0..9 {
            for j in 0..9 {
                if sodoku[i][j] == 0 {
                    coords.push([i, j]);
                }
            }
        }
        coords
    }

    fn solve(&mut self) {
        let mut k = 0;
        self[k] = 1;
        while !self.finished() || !self.valid() {
            if self.valid() {
                k += 1;
                self[k] = 1;
            } else {
                while !self.valid() {
                    self.backtrace(&mut k);
                }
            }
        }
    }

    fn backtrace(&mut self, k: &mut usize) {
        let coord = self.coords[*k];
        let mut v = &mut self[coord];
        while *v == 9 {
            *v = 0;
            *k -= 1;
            let coord = self.coords[*k];
            v = &mut self[coord];
        }
        *v += 1;
    }

    fn finished(&self) -> bool {
        for i in 0..9 {
            for j in 0..9 {
                if self[[i, j]] == 0 {
                    return false;
                }
            }
        }
        true
    }

    /// Check whether the sodoku is still valid
    fn valid(&self) -> bool {
        self.valid_rows() && self.valid_cols() && self.valid_box()
    }

    fn valid_rows(&self) -> bool {
        for i in 0..9 {
            let mut used = [false; 10];
            for j in 0..9 {
                let n = self[[i, j]];
                if n != 0 {
                    if used[n as usize] {
                        return false;
                    } else {
                        used[n as usize] = true
                    }
                }
            }
        }
        true
    }
    fn valid_cols(&self) -> bool {
        for j in 0..9 {
            let mut used = [false; 10];
            for i in 0..9 {
                let n = self[[i, j]];
                if n != 0 {
                    if used[n as usize] {
                        return false;
                    } else {
                        used[n as usize] = true
                    }
                }
            }
        }
        true
    }
    fn valid_box(&self) -> bool {
        let mut used = [[[false; 16]; 3]; 3];
        for i_ in 0..3 {
            // "outer" i and j; indexes of 3*3 square blocks
            for j_ in 0..3 {
                for i in 3 * i_..3 * i_ + 3 {
                    // "inner" i and j; indexes of individual cells
                    for j in 3 * j_..3 * j_ + 3 {
                        let n = self[[i, j]];
                        if n != 0 {
                            if used[i_][j_][n as usize] {
                                return false;
                            } else {
                                used[i_][j_][n as usize] = true
                            }
                        }
                    }
                }
            }
        }
        true
    }
}

impl std::ops::Index<usize> for Sodoku {
    type Output = u8;

    fn index(&self, i: usize) -> &Self::Output {
        let coord = self.coords[i];
        &self[coord]
    }
}

impl std::ops::Index<Coord> for Sodoku {
    type Output = u8;

    fn index(&self, coords: Coord) -> &Self::Output {
        &self.matrix[coords[0]][coords[1]]
    }
}

impl std::ops::IndexMut<Coord> for Sodoku {
    fn index_mut(&mut self, coords: Coord) -> &mut u8 {
        &mut self.matrix[coords[0]][coords[1]]
    }
}

impl std::ops::IndexMut<usize> for Sodoku {
    fn index_mut(&mut self, i: usize) -> &mut u8 {
        let coord = self.coords[i];
        &mut self.matrix[coord[0]][coord[1]]
    }
}

use std::fmt;

impl fmt::Display for Sodoku {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        let mut s = String::with_capacity(180);
        for i in 0..9 {
            for j in 0..9 {
                s.push_str(&format!("{} ", self[[i, j]]))
            }
            s.push('\n')
        }
        write!(f, "{}", s)
    }
}

pub fn main() {
    for sodoku in SODOKU.iter() {
        let mut sodoku = Sodoku::new(sodoku.clone());
        sodoku.solve();
        println!("{}", sodoku);
    }
}
